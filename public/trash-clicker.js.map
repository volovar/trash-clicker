{"version":3,"sources":["app/components/components.js","app/components/decrement-value.js","app/components/display-value.js","app/components/increment-value.js","app/data/npc-data.js","app/data/player-data.js","app/entity.js","app/game.js","app/npc-store.js","app/npc.js","app/player.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1BA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtBA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxvIA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAdA;AAAA;ACAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnCA;AAAA","file":"public/trash-clicker.js","sourcesContent":["var displayValue = require('./display-value');\nvar incrementValue = require('./increment-value');\nvar decrementValue = require('./decrement-value');\n\nvar Components = {\n    'displayValue': displayValue,\n    'incrementValue': incrementValue,\n    'decrementValue': decrementValue\n}\n\nmodule.exports = Components;","var decrementValue = function (prop, amount) {\n    return this[prop] -= amount;\n}\n\nmodule.exports = decrementValue;","var displayValue = function () {\n    return this.currentValue;\n}\n\nmodule.exports = displayValue;","var incrementValue = function (prop, amount) {\n    return this[prop] += amount;\n}\n\nmodule.exports = incrementValue;","var npcData = {\n    'raccoon': {\n        'name': 'Raccoon',\n        'value': 1000,\n        'clickValue': 2,\n        'description': 'A feisty little creature that will get in your trash',\n        'type': 'raccoon'\n    },\n\n    'garbage_person': {\n        'name': 'Garbage Person',\n        'value': 10000,\n        'clickValue': 50,\n        'description': 'This person comes to take your trash away',\n        'type': 'garbage_person'\n    },\n\n    'grouch': {\n        'name': 'A Grouch',\n        'value': 30000,\n        'clickValue': 200,\n        'description': 'A very unpleasant monster who wants to live in the trash',\n        'type': 'grouch'\n    }\n}\n\nmodule.exports = npcData;","var PlayerData = {\n    'name': 'Player',\n    'clickValue': 100,\n    'currentValue': 100,\n    'purchases': {},\n    'score': 0\n}\n\nmodule.exports = PlayerData;","var Components = require('./components/components');\n\nvar Entity = {\n    createEntity: function (properties, components) {\n        var entity = {};\n\n        for (prop in properties) {\n            entity[prop] = properties[prop];\n        }\n\n        components.forEach(function (component) {\n            if (entity.hasOwnProperty(component)) {\n                console.log('Entity already has property: ' + component)\n            } else {\n                entity[component] = Components[component];\n            }\n        });\n\n        return entity;\n    }\n}\n\nmodule.exports = Entity;","(function() {\n    'use strict';\n\n    var game = document.getElementById('js-game');\n    var score = document.getElementById('js-score');\n    var scoreCounter = 0;\n    var pauseButton = document.getElementById('js-pause');\n    var paused;\n    var mainLoop;\n    var trashButton = document.getElementById('js-trash-button');\n    var itemList = [];\n\n    var Player = require('./player');\n    var NPCData = require('./data/npc-data');\n    var NPCStore = require('./npc-store');\n\n    // setting up the events\n    var initializeEvents = (function () {\n        trashButton.addEventListener('click', function (e) {\n            e.preventDefault();\n            Player.score += Player.currentValue;\n        });\n\n        pauseButton.addEventListener('click', function (e) {\n            e.preventDefault();\n\n            if (paused) {\n                startGame();\n                e.target.innerHTML = 'Pause';\n            } else {\n                pauseGame();\n                e.target.innerHTML = 'Paused';\n            }\n        });\n    }())\n\n    var initGame = (function () {\n        NPCStore.init();\n        startGame();\n    }());\n\n    function startGame () {\n        mainLoop = setInterval(function () {\n            gameLoop();\n        }, 60);\n    }\n\n    function pauseGame () {\n        clearInterval(mainLoop);\n        paused = true;\n    }\n\n    function gameLoop () {\n        paused = false;\n        score.innerHTML = (Player.score / 100).toString().split('.')[0];\n        createAutoClickers();\n        NPCStore.updateItemAvailability();\n        NPCStore.updatePurchaseCounts();\n    }\n\n    // auto clickers\n    function createAutoClickers () {\n        var purchase;\n\n        for (purchase in Player.purchases) {\n            addClicker(NPCData[purchase].clickValue, Player.purchases[purchase]);\n        }\n    }\n\n    function addClicker (clickValue, purchased) {\n        Player.score += clickValue * purchased;\n    }\n}());","var store = document.getElementById('js-item-store');\nvar items = document.getElementsByClassName('js-item');\n\nvar NPCs = require('./npc');\nvar NPCData = require('./data/npc-data');\nvar Player = require('./player');\n\n// creating NPCs and adding them to a list\nvar raccoonNew = NPCs.createNew('raccoon');\nvar garbagePersonNew = NPCs.createNew('garbage_person');\nvar grouchNew = NPCs.createNew('grouch');\nvar npcList = [raccoonNew, garbagePersonNew, grouchNew];\n\n// setting up the store\nvar NPCStore = {\n    init: function () {\n        npcList.forEach(function(npc) {\n            var count = 0;\n            var cost = (npc.value / 100).toString();\n\n            var title = createElement('h3', npc.name, '', 'item-name');\n            var price = createElement('span', cost, '', 'item-price');\n            var description = createElement('p', npc.description, '', 'item-desc');\n            var purchased = createElement('span', count, '', 'item-purchased');\n            var li = createElement('li', '', npc.type, ['js-item', 'item', 'item-disabled']);\n\n            li.appendChild(title);\n            li.appendChild(price);\n            li.appendChild(description);\n            li.appendChild(purchased);\n            store.appendChild(li);\n        });\n\n        for (var i = 1; i <= items.length; i++) {\n            items[i - 1].addEventListener('click', function (e) {\n                Player.purchaseNPC(this.dataset.itemType);\n            });\n        }\n    },\n\n    updatePurchaseCounts: function () {\n        for (var i = 0; i < items.length; i++) {\n            // var children = items[i].children;\n            // console.log(items[i].children);\n            // var child;\n            // var type = items[i].dataset.itemType;\n            // console.log(type);\n            // var parent\n            //\n            // console.log(Player.purchases[type]);\n            //\n            // for (var j = 0; j < children.length; j++) {\n            //     if (children[j].className = 'item-purchased') {\n            //         console.log(children[j]);\n            //         children[j].textnode = Player.purchases[type];\n            //     }\n            // }\n\n            //\n            // for (var i = 1; i <= itemList.length; i++) {\n            //     var item = itemList[i - 1];\n            //\n            //     if (item.type == type) {\n            //         if (scoreCounter >= item.price) {\n            //             item.purchased += 1;\n            //             child.innerHTML = item.purchased;\n            //             scoreCounter -= item.price;\n            //         }\n            //     }\n            // }\n        }\n        //\n        //\n        // if (Player.purchases.hasOwnProperty(npc.type)) {\n        //     count = Player.purchases[npc.type];\n        // } else {\n        //     count = 0\n        // }\n    },\n\n    updateItemAvailability: function () {\n        // var listItems = document.getElementsByClassName('item');\n\n        for (var i = 0; i < items.length; i++) {\n            var item = items[i];\n            var itemType = item.dataset.itemType;\n\n            if (Player.score >= NPCData[itemType].value) {\n                for (var j = 0; j < items.length; j++) {\n                    if (items[j].dataset.itemType === itemType) {\n                        items[j].classList.remove('item-disabled');\n                    }\n                }\n            } else {\n                for (var j = 0; j < items.length; j++) {\n                    if (items[i].dataset.itemType === itemType) {\n                        items[i].classList.add('item-disabled');\n                    }\n                }\n            }\n        }\n    }\n}\n\n// helper functions\n//\n// function for creating a new element. It takes an element name, the content in\n// the element, a data attribute, a single class name or an array of class names\n// and lastly an ID\nfunction createElement (elem, elemContent, elemData, elemClass, elemId) {\n    var newElem = document.createElement(elem);\n\n    newElem.innerHTML = elemContent;\n\n    if (elemData) {\n        newElem.dataset.itemType = elemData;\n    }\n\n    if (elemId) {\n        newElem.id = elemId;\n    }\n\n    if (elemClass) {\n        if (Array.isArray(elemClass)) {\n            for (var i = 1; i <= elemClass.length; i++) {\n                newElem.className += ' ' + elemClass[i - 1];\n            }\n        } else {\n            newElem.className = elemClass;\n        }\n    }\n\n    return newElem;\n}\n\nmodule.exports = NPCStore;","var Entity = require('./entity');\nvar npcData = require('./data/npc-data');\nvar components = [\n    'displayValue',\n    'incrementValue',\n    'decrementValue'\n];\n\nvar NPCs = {\n    createNew: function (type) {\n        return Entity.createEntity(npcData[type], components);\n    }\n};\n\nmodule.exports = NPCs;","var NPCData = require('./data/npc-data');\nvar Entity = require('./entity');\nvar props = require('./data/player-data');\nvar components = [\n    'displayValue',\n    'incrementValue',\n    'decrementValue'\n];\n\nvar Player =  Entity.createEntity(props, components);\n\nPlayer.checkPurchases = function () {\n    return console.log(this.purchases);\n}\n\nPlayer.checkNPCAmount = function (type) {\n    return console.log(this.purchases[type]);\n}\n\nPlayer.purchaseNPC = function (type) {\n    var cost = NPCData[type].value;\n\n    if (this.score >= cost && cost !== undefined) {\n        if (!this.purchases.hasOwnProperty(type)) {\n            this.purchases[type] = 1;\n        } else {\n            this.purchases[type] += 1;\n        }\n\n        this.score -= cost;\n    } else {\n        console.log('need more money!');\n    }\n}\n\nmodule.exports = Player;"]}